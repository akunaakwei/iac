services:
  chown_stepca:
    image: busybox:stable-musl
    user: root
    volumes:
      - smallstep_data:/smallstep_data
    command: chown -R 1000:1000 /smallstep_data
  stepca:
    image: smallstep/step-ca:latest
    user: 1000
    ports:
      - 9010:9000
    environment:
      - DOCKER_STEPCA_INIT_NAME=Smallstep
      - DOCKER_STEPCA_INIT_DNS_NAMES=localhost,smallstep,smallstep.internal
      - DOCKER_STEPCA_INIT_ACME=true
      - TZ=Europe/Berlin    # optional: set desired timezone
    networks:
      traefik_network:
        aliases:
          - smallstep
          - smallstep.internal
    volumes:
      - smallstep_data:/home/step
    healthcheck: # optional: remember to adapt the host:port to your environment
      test: "wget -q --tries=1 --no-check-certificate https://smallstep:9000/health -O - | grep -Eo '\"status\"\\s*:\\s*\"ok\"'"
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 20s
    restart: unless-stopped
    depends_on:
      chown_stepca:
        condition: service_completed_successfully
  chown_traefik:
    image: busybox:stable-musl
    user: root
    volumes:
      - traefik_data:/traefik_data
    command: chown -R 1000:1000 /traefik_data
  traefik:
    image: traefik:latest
    user: 1000
    # needs to be privileged to access docker socket
    privileged: true
    depends_on:
      stepca:
        condition: service_healthy
    command:
      - "--log=true"
      - "--log.level=DEBUG"

      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=traefik_traefik_network"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesResolvers.charlie.acme.email=admin"
      - "--certificatesresolvers.charlie.acme.caserver=https://smallstep:9000/acme/acme/directory"
      - "--certificatesResolvers.charlie.acme.httpchallenge=true"
      - "--certificatesResolvers.charlie.acme.httpchallenge.entryPoint=web"
      - "--certificatesresolvers.charlie.acme.storage=/traefik_data/acme.json"
      - "--certificatesresolvers.charlie.acme.certificatesDuration=24"
    labels:
      - traefik.enable=true
      # - traefik.http.middlewares.httpsonly.redirectscheme.scheme=https
      # - traefik.http.middlewares.httpsonly.redirectscheme.permanent=true
      # - traefik.http.routers.httpsonly.rule=HostRegexp(`{any:.*}`)
      # - traefik.http.routers.httpsonly.middlewares=httpsonly
      # - traefik.http.routers.httpsonly.entrypoints=web
      - traefik.http.routers.dashboard.rule=Host(`charlie.traefik.internal`)
      - traefik.http.routers.dashboard.service=dashboard@internal
      - traefik.http.routers.dashboard.entrypoints=web,websecure
      - traefik.http.routers.api.rule=Host(`charlie.traefik.internal`) && PathPrefix(`/api`)
      - traefik.http.routers.api.service=api@internal
      - traefik.http.routers.dashboard.tls=true
      - traefik.http.routers.dashboard.tls.certresolver=charlie
      - traefik.http.routers.api.tls=true
      - traefik.http.routers.api.tls.certresolver=charlie
      - traefik.http.routers.api.entrypoints=web,websecure
    environment:
      LEGO_CA_CERTIFICATES: "/usr/local/share/ca-certificates/certs/root_ca.crt"
      TZ: Europe/Berlin
    ports:
      - 80:80
      - 443:443
      - 8084:8080
    networks:
      traefik_network:
        aliases:
          - traefik
          - charlie.traefik.internal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - smallstep_data:/usr/local/share/ca-certificates:ro
      - traefik_data:/traefik_data
    restart: unless-stopped
volumes:
  smallstep_data:
    driver: local
  traefik_data:
    driver: local
networks:
  traefik_network:
    driver: bridge
