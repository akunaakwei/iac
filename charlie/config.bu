variant: flatcar
version: 1.1.0
passwd:
  users:
    # create user akuna
    - name: akuna
      ssh_authorized_keys:
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAICjQg4xxpoNQeUuiapCXuahcnDmLvLq1H0B2CJTzdzKW
      groups:
        - sudo
storage:
  files:
    # static ip
    - path: /etc/systemd/network/00-enp4s0.network
      contents:
        inline: |
          [Match]
          Name=enp4s0
          [Network]
          Address=192.168.0.2/24
          Gateway=192.168.0.1
          DNS=192.168.0.6
    # set the hostname to charlie
    - path: /etc/hostname
      mode: 0644
      contents:
        inline: charlie
    # set the keyboard layout to de
    - path: /etc/vconsole.conf
      mode: 0644
      contents:
        inline: KEYMAP=de
    # add docker-compose
    - path: /opt/extensions/docker_compose/docker_compose-2.24.5-x86-64.raw
      mode: 0644
      contents:
        source: https://github.com/flatcar/sysext-bakery/releases/download/latest/docker_compose-2.24.5-x86-64.raw
    - path: /etc/sysupdate.docker_compose.d/docker_compose.conf
      contents:
        source: https://github.com/flatcar/sysext-bakery/releases/download/latest/docker_compose.conf
    - path: /etc/sysupdate.d/noop.conf
      contents:
        source: https://github.com/flatcar/sysext-bakery/releases/download/latest/noop.conf
    # add traefik
    - path: /opt/traefik/docker-compose.yml
      contents:
        local: traefik/docker-compose.yml
    # add homeassistant
    - path: /opt/homeassistant/docker-compose.yml
      contents:
        local: homeassistant/docker-compose.yml
    # add ntfy
    - path: /opt/ntfy/docker-compose.yml
      contents:
        local: ntfy/docker-compose.yml
    - path: /opt/ntfy/Dockerfile
      contents:
        local: ntfy/Dockerfile
    - path: /opt/ntfy/server.yml
      contents:
        local: ntfy/server.yml
  links:
    # set the timezone to europe/berlin
    - path: /etc/localtime
      target: ../usr/share/zoneinfo/Europe/Berlin
    # enable docker service
    - path: /etc/systemd/system/multi-user.target.wants/docker.service
      target: /usr/lib/systemd/system/docker.service
      hard: false
      overwrite: true
    # enable docker-compose
    - target: /opt/extensions/docker_compose/docker_compose-2.24.5-x86-64.raw
      path: /etc/extensions/docker_compose.raw
      hard: false
systemd:
  units:
    # ensure docker starts automatically instead of being only socket-activated
    - name: docker.service
      enabled: true
    # create a btrfs filesystem for docker
    - name: format-var-lib-docker.service
      contents: |
        [Unit]
        Before=docker.service var-lib-docker.mount
        RequiresMountsFor=/var/lib
        ConditionPathExists=!/var/lib/docker.btrfs
        [Service]
        Type=oneshot
        ExecStart=/usr/bin/truncate --size=128G /var/lib/docker.btrfs
        ExecStart=/usr/sbin/mkfs.btrfs /var/lib/docker.btrfs
    # mount the btrfs filesystem
    - name: var-lib-docker.mount
      enabled: true
      contents: |
        [Unit]
        Before=docker.service
        After=format-var-lib-docker.service
        Requires=format-var-lib-docker.service
        [Mount]
        What=/var/lib/docker.btrfs
        Where=/var/lib/docker
        Type=btrfs
        Options=loop,discard
        [Install]
        RequiredBy=docker.service
    # enable sysupdate
    - name: systemd-sysupdate.timer
      enabled: true
    # enable docker-compose updates
    - name: systemd-sysupdate.service
      dropins:
        - name: docker_compose.conf
          contents: |
            [Service]
            ExecStartPre=/usr/bin/sh -c "readlink --canonicalize /etc/extensions/docker_compose.raw > /tmp/docker_compose"
            ExecStartPre=/usr/lib/systemd/systemd-sysupdate -C docker_compose update
            ExecStartPost=/usr/bin/sh -c "readlink --canonicalize /etc/extensions/docker_compose.raw > /tmp/docker_compose-new"
            ExecStartPost=/usr/bin/sh -c "if ! cmp --silent /tmp/docker_compose /tmp/docker_compose-new; then touch /run/reboot-required; fi"
    - name: start-traefik.service
      enabled: true
      contents: |
        [Unit]
        Description=Start traefik
        After=docker.service
        Requires=docker.service
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/usr/bin/docker compose -f /opt/traefik/docker-compose.yml up -d
        ExecStop=/usr/bin/docker compose -f /opt/traefik/docker-compose.yml stop
        [Install]
        WantedBy=multi-user.target
    - name: start-homeassistant.service
      enabled: true
      contents: |
        [Unit]
        Description=Start homeassistant
        After=docker.service
        Requires=docker.service
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/usr/bin/docker compose -f /opt/homeassistant/docker-compose.yml up -d
        ExecStop=/usr/bin/docker compose -f /opt/homeassistant/docker-compose.yml stop
        [Install]
        WantedBy=multi-user.target
    - name: start-ntfy.service
      enabled: true
      contents: |
        [Unit]
        Description=Start ntfy
        After=docker.service
        Requires=docker.service
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/usr/bin/docker compose -f /opt/ntfy/docker-compose.yml up -d
        ExecStop=/usr/bin/docker compose -f /opt/ntfy/docker-compose.yml stop
        [Install]
        WantedBy=multi-user.target