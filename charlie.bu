variant: fcos
version: 1.5.0
passwd:
  users:
    # create user akuna
    - name: akuna
      ssh_authorized_keys:
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAICjQg4xxpoNQeUuiapCXuahcnDmLvLq1H0B2CJTzdzKW
storage:
  files:
    # set the hostname to charlie
    - path: /etc/hostname
      mode: 0644
      contents:
        inline: charlie
    # set the keyboard layout to de
    - path: /etc/vconsole.conf
      mode: 0644
      contents:
        inline: KEYMAP=de
    # set a static ip address
    - path: /etc/NetworkManager/system-connections/enp4s0.nmconnection
      mode: 0600
      contents:
        inline: |
          [connection]
          id=enp4s0
          type=ethernet
          interface-name=enp4s0
          [ipv4]
          address1=192.168.0.2/24,192.168.0.1
          dhcp-hostname=charlie
          dns=8.8.8.8;
          dns-search=
          may-fail=false
          method=manual
    # run portainer agent
    - path: /etc/containers/systemd/portainer-agent.container
      contents:
        inline: |
          [Unit]
          Description=Portainer Agent
          Wants=network-online.target
          After=network-online.target

          [Service]
          ExecStartPre=systemctl enable --now podman.socket

          [Volume]
          VolumeName=portainer

          [Container]
          ContainerName=portainer-agent
          Image=docker.io/portainer/agent:2.22.0
          PodmanArgs=--privileged
          PublishPort=9001:9001
          Volume=/run/podman/podman.sock:/var/run/docker.sock
          Volume=/var/lib/containers/storage/volumes:/var/lib/docker/volume
          Volume=/:/host

          [Install]
          WantedBy=multi-user.target
    # systemd configuration file for the Infinite Noise TRNG
    - path: /etc/infnoise.conf
      mode: 0644
      contents:
        inline: |
          # systemd configuration file for the Infinite Noise TRNG

          #INFNOISE_MULTIPLIER=10
          # keccak multiplier, default = 1

          INFNOISE_SERIAL=1337-D2407D73
          # serial number of device, default: ""
          # use infnoise --list-devices to find out your serial number

          #INFNOISE_DEBUG=true
          # debug mode, default: false
          # debug logging to syslog  
  # set the timezone to europe/berlin
  links:
    - path: /etc/localtime
      target: ../usr/share/zoneinfo/Europe/Berlin
systemd:
  units:
    # install infnoise
    - name: rpm-ostree-install-infnoise.service
      enabled: true
      contents: |
        [Unit]
        Description=Layer infnoise with rpm-ostree
        Wants=network-online.target
        After=network-online.target
        # We run before `zincati.service` to avoid conflicting rpm-ostree
        # transactions.
        Before=zincati.service
        ConditionPathExists=!/var/lib/%N.stamp

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        # `--allow-inactive` ensures that rpm-ostree does not return an error
        # if the package is already installed. This is useful if the package is
        # added to the root image in a future Fedora CoreOS release as it will
        # prevent the service from failing.
        ExecStart=/usr/bin/rpm-ostree install -y --allow-inactive libusb1 https://13-37.org/files/infnoise-0.3.3-0.x86_64.rpm https://13-37.org/files/infnoise-tools-0.3.3-0.x86_64.rpm
        ExecStart=/bin/touch /var/lib/%N.stamp
        ExecStart=/bin/systemctl --no-block reboot

        [Install]
        WantedBy=multi-user.target
    - name: infnoise.service
      enabled: true
      contents: |
        [Unit]
        Description=Wayward Geek InfNoise TRNG driver
        BindsTo=dev-infnoise.device
        After=dev-infnoise.device

        [Service]
        Type=forking
        WorkingDirectory=/tmp
        ExecStart=/usr/bin/infnoise --dev-random --daemon --pidfile /var/run/infnoise.pid
        User=root
        Group=root
        Restart=always

        [Install]
        WantedBy=multi-user.target